version: "3"
services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    image: nginx:latest
    ports:
      - 80:80
    environment:
      - TZ=Asia/Tokyo

    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./react-app/react-app/build:/var/www
      # 通信テスト用
      # - ./docker/nginx/html:/usr/share/nginx/html

    depends_on:
      - react

  # react:
  #   build:
  #     context: .
  #     dockerfile: ./docker/react/Dockerfile
  #   container_name: react_container
  #   tty: true
  #   volumes:
  #     - ./react-app:/app/react
  #   command: sh -c "cd /app/react/react-app && yarn start"
  #   ports:
  #     - 3000:3000
  #   environment:
  #     - CHOKIDAR_USEPOLLING=trues

  go:
    container_name: golang
    build:
      context: .
      dockerfile: ./docker/golang/Dockerfile
    ports:
      - 8000:8000
    tty: true

    volumes:
      - ./go-app/src:/go/src

  #以下、追記
  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    container_name: mysql_container
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: react-go-app
      TZ: "Asia/Tokyo"
    volumes:
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./docker/mysql/mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    links:
      - go

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: phpmyadmin
  #   environment:
  #     - PMA_ARBITRARY=1
  #     - PMA_HOST=mysql
  #     - PMA_USER=root
  #     - PMA_PASSWORD=root
  #   links:
  #     - mysql
  #   ports:
  #     - 1234:80
  #   volumes:
  #     - /sessions
